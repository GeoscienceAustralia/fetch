digraph fetch {

	node[shape=record,style=filled,fillcolor=gray95]
	edge[dir=back, arrowtail=empty]

	16[label="{SimpleObject}"];
	4[label="{DataSource|trigger(reporter)}"];
	RsyncMirrorSource [shape=box];
	EmptySource [shape=box];
	21[label="{DateRangeSource|using:DataSource\noverridden_properties:dict(str,str)\nstart_day\nend_day}"];
	FtpSource [shape=box];
	FtpListingSource [shape=box];
	10[label="{_HttpBaseSource|__init__(target_dir, url, urls...)\ntrigger()\n_fetch_file(...)}"];
	11[label="{HttpSource|trigger_url(reporter, seesion, url)}"];
	12[label="{HttpListingSource|trigger_url(reporter, seesion, url)}"];
	13[label="{RssSouce|trigger_url(reporter, seesion, url)}"];
	14[label="{EcmwfApiSource|__init__(target_dir, settings, filename_transform)\ntrigger_url(reporter)}"];
	7[label="{FilenameTransform|transform_filename()\ntransform_output_path()}"];
	8[label="{RegexOutputPathTransform|__init__(pattern)}"];
	9[label="{DateFileNameTransform|__init__(format, fixed_date)}"];
	19[label="{WrapHandler|item:ScheduledItem\nreporter:ResultHandler}"];
	15[label="{ScheduledItem|name\ncron_pattern\nmodule:DataSource\nprocess:ShellFileProcess}"];
	18[label="{multiprocessing.\nProcess}"];
	17[label="{ScheduledProcess|reporter:ResultHandler\nitem:ScheduledItem\nscheduled_time:float\nlog_directory:str\lock_directory:str|run()}"];
	Scheduler[shape=box];
	Config[shape=box];
	20[label="{RunConfig|config_path\nschedule:Schedule\nbase_directory\nlog_directory\nlock_directory\notifiers:ResultHandler[]\nmessaging_settings:dict\nlog_levels}"];
	Uri[shape=box];
	TaskFailureListener[shape=box];
	TaskFailureEmailer[shape=box];
	5[label="{ResultHandler|file_error()\nfiles_complete()\nfile_complete()}"];
	6[label="{NotifyResultHandler}"];
	2[label="{FileProcessor|process()}"];
	3[label="{ShellFileProcessor}"];

	16 -> 4;
	4 -> RsyncMirrorSource;
	4 -> EmptySource;
	4 -> 21;
	4 -> FtpSource;
	4 -> FtpListingSource;
	4 -> 14;
	4 -> 10;
	10 -> 11;
	10 -> 12;
	10 -> 13;

	16 -> 7;
        7 -> 8;
        7 -> 9;

	16 -> 15;
	16 -> Scheduler;
	TaskFailureListener -> TaskFailureEmailer;
	5 -> 6;
	5 -> 19;
	18 -> 17;
	2 -> 3;
}
